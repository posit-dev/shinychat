[{"path":"https://posit-dev.github.io/shinychat/r/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Posit Software, PBC Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"choose-a-model","dir":"Articles","previous_headings":"Setup","what":"Choose a model","title":"Get started","text":"First, choose model power chatbot. ellmer shinychat support wide variety LLM providers including Anthropic, OpenAI, Vertex, Snowflake, Groq, Perplexity, . ellmer, specify LLM provider choosing corresponding chat_*() function, e.g., chat_anthropic(), chat_openai(), etc. makes easy swap chat provider different one time. Model providers also typically offer variety models. specify particular model, use chat_*() function‚Äôs model argument. example: don‚Äôt specify model argument, chat_*() function use reasonable default. information, see individual chat_*() function‚Äôs documentation.","code":"ellmer::chat_openai(model = \"o3\")"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"set-up-credentials","dir":"Articles","previous_headings":"Setup","what":"Set up credentials","title":"Get started","text":"Next, authenticate LLM provider. Popular model providers like OpenAI Anthropic require API key. recommend storing API keys .Renviron (e.g., OPENAI_API_KEY ANTHROPIC_API_KEY). can find helpful links tips getting set credentials (e.g., API key) relevant reference page chat_*() provider ‚Äôd like work (chat_openai(), chat_anthropic()).","code":""},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"create-a-basic-chatbot","dir":"Articles","previous_headings":"","what":"Create a basic chatbot","title":"Get started","text":"‚Äôve identified model provider want use set necessary credentials, ‚Äôre ready create chatbot. following code creates basic chatbot Shiny app. Copy paste code R script, switching ellmer::chat_openai() desired chat function. Save file app.R run app. Congrats, now chat interface powered LLM choice! üéâ Screenshot conversation using shinychat.","code":"library(shiny) library(shinychat)  ui <- bslib::page_fluid(   chat_ui(\"chat\") )  server <- function(input, output, session) {   chat <- ellmer::chat_openai()      observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"inspect-the-code","dir":"Articles","previous_headings":"Create a basic chatbot","what":"Inspect the code","title":"Get started","text":"Let‚Äôs take closer look code app.R. shinychat chatbot includes three core steps: Create chat UI element chat_ui(). Initialize chat chat_*() function, like chat_openai(), server function. Use different chat_*() function (chat_ollama(), chat_anthropic(), etc.) use different model provider. can also use system_prompt argument supply system prompt. Set reactive listener observeEvent() waits user submit message (input$chat_user_input). message received: Send input LLM using chat$stream_async(), returns asynchronously streaming results LLM. means results appear chunks, user doesn‚Äôt wait full response. Append response chat_ui() element chat_append(), user can see model‚Äôs reply appear live ‚Äôs generated.","code":"library(shiny) library(shinychat)  ui <- bslib::page_fluid(   # Add a chat UI element   chat_ui(\"chat\") )  server <- function(input, output, session) {   # Initialize a chat with your chosen model provider   chat <- ellmer::chat_openai(system_prompt = \"You are a helpful assistant.\")      # Listen for user input and communicate with the model   observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"add-a-system-prompt","dir":"Articles","previous_headings":"Create a basic chatbot","what":"Add a system prompt","title":"Get started","text":"Use chat_*() function‚Äôs system_prompt argument provide LLM information like behave. learn writing system prompts, see ellmer‚Äôs Prompt design vignette. Generally, recommend writing system prompt separate markdown file, prompt short can also supply directly string system_prompt argument.","code":"chat <- ellmer::chat_ollama(system_prompt = \"You are a helpful assistant\")"},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"on-startup","dir":"Articles","previous_headings":"Create a basic chatbot > Add messages and suggestions","what":"On startup","title":"Get started","text":"can specify messages show chat first loads using chat_ui()‚Äôs messages argument. can use markdown HTML format messages. Screenshot chatbot welcome message. can also suggest inputs user adding suggestion CSS class relevant portions message. Similarly, use submit class make clicking suggestion submit input automatically. Screenshot chatbot input suggestions. Messages can also contain arbitrary Shiny UI components, even include something like tooltip provide additional details demand.","code":"chat_ui(     id = \"chat\",     messages = \"**Hello!** How can I help you today?\" ) messages <-   '   **Hello!** How can I help you today?    Here are a couple suggestions:    * <span class=\"suggestion\">Tell me a joke<\/span>   * <span class=\"suggestion submit\">Tell me a story<\/span>   '  ui <- bslib::page_fillable(   chat_ui(     id = \"chat\",     messages = messages   ) )"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"mid-conversation","dir":"Articles","previous_headings":"Create a basic chatbot > Add messages and suggestions","what":"Mid-conversation","title":"Get started","text":"can also use suggestions guide users multi-turn conversation. , ‚Äôll need instruct AI generate suggestions adding section like one system prompt:","code":"## Showing prompt suggestions  If you find it appropriate to suggest prompts the user might want to write, wrap the text of each prompt in `<span class=\"suggestion\">` tags. Also use \"Suggested next steps:\" to introduce the suggestions. For example:  ``` Suggested next steps:  1. <span class=\"suggestion\">Suggestion 1.<\/span> 2. <span class=\"suggestion\">Suggestion 2.<\/span> 3. <span class=\"suggestion\">Suggestion 3.<\/span> ```"},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"screen-filling-layout","dir":"Articles","previous_headings":"Layouts","what":"Screen-filling layout","title":"Get started","text":"Use page_fillable() fillable_mobile = TRUE want chatbot input stay anchored bottom page chat fill remaining space. Screenshot chatbot filling page.","code":"ui <- bslib::page_fillable(   chat_ui(\"chat\", messages = \"Welcome!\"),   fillable_mobile = TRUE )"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"sidebar-layout","dir":"Articles","previous_headings":"Layouts","what":"Sidebar layout","title":"Get started","text":"can also useful place chat sidebar, free main panel components. Use page_sidebar() create sidebar page. , set chat sidebar‚Äôs heights 100% chat element fills sidebar. Screenshot chatbot filling sidebar.","code":"library(shiny) library(bslib) library(shinychat)  ui <- bslib::page_sidebar(   sidebar = sidebar(     chat_ui(       \"chat\",       messages = list(         \"Welcome! Here is a <span class='suggestion'>suggestion<\/span>.\"       ),       height = \"100%\"     ),     width = 300,     style = \"height: 100%;\"   ),   \"Main content\",   fillable = TRUE )  server <- function(input, output, session) {   chat <- ellmer::chat_openai()      observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://posit-dev.github.io/shinychat/r/articles/get-started.html","id":"card-layout","dir":"Articles","previous_headings":"Layouts","what":"Card layout","title":"Get started","text":"Embedding chat component inside card() can help visually separate chat rest app. can also add card header include information chatbot (perhaps tooltip). Cards also come handy features like full_screen = TRUE make chat full-screen embedded inside larger app. Screenshot chatbot embedded card header tooltip.","code":"library(shiny) library(bslib) library(shinychat)  ui <- page_fillable(   card(     card_header(       \"Welcome to Posit chat\",       tooltip(icon(\"question\"), \"This chat is brought to you by Posit.\"),       class = \"d-flex justify-content-between align-items-center\"     ),     chat_ui(       id = \"chat\",       messages = \"Hello! How can I help you today?\"     )   ),   fillable_mobile = TRUE )  server <- function(input, output, session) {   chat <- ellmer::chat_openai()      observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Tool Calling UI","text":"shinychat automatically displays rich UI tool calls results, providing users intuitive view tools executed outcomes. tool UI works ---box ellmer requires additional configuration get started.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"basic-tool-display","dir":"Articles","previous_headings":"","what":"Basic tool display","title":"Tool Calling UI","text":"Let‚Äôs start simple weather forecasting tool demonstrate default behavior: ellmer, register tool chat object. LLM calls tool, ellmer automatically evaluates tool call returns result LLM. ‚Äôre interested learning use create tools ellmer, recommend reading Tool/function calling article ellmer website. ‚Äôre working interactively R console‚Äî‚Äôve set echo = \"output\" option‚Äîellmer shows tool calls made gives preview tool result. shinychat‚Äôs tool UI works way, rich output displays shown directly chat_ui() interface Shiny apps. LLM calls tool, shinychat automatically displays tool request collapsed card. Expanding card shows arguments passed tool. tool result completed, shinychat replaces request card containing tool result: tool throws error called, ellmer captures error shows LLM. shinychat updates tool card show error message: use chat_app() chat UI module via chat_mod_ui() chat_mod_server(), shinychat automatically handles tool requests results, displaying chat interface. hand, ‚Äôre using chat_ui() calling chat_append() stream chat output, ‚Äôll need make sure ellmer streams tool requests results shinychat setting stream = \"content\" $stream_async() call. Setting stream = \"content\" tells ellmer stream ellmer::Content objects rather plain text. result, ellmer::ContentToolRequest ellmer::ContentToolResult objects streamed shinychat, automatically displays tool requests results chat interface.","code":"library(shinychat) library(ellmer) library(weathR) # for forecasts via `point_tomorrow()`  get_weather_forecast <- tool(   function(lat, lon) {     point_tomorrow(lat, lon, short = FALSE)   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\")   ) ) chat <- ellmer::chat(\"openai/gpt-4.1-nano\", echo = \"output\") chat$register_tool(get_weather_forecast) chat$chat(\"What's the weather in Boston like today?\") ‚óØ [tool call] get_weather_forecast(lat = 42.3601, lon = -71.0589) ‚óè #> [{\"time\":\"2025-08-05 11:00:00 EDT\",\"temp\":76,\"dewpoint\":17.7778,\"hum‚Ä¶  The weather in Boston today is partly sunny with temperatures around 75-76¬∞F during the afternoon. There is some humidity at about 64-66%. There is a possibility of rain starting around 4 PM, with increasing chances in the evening. Winds are coming from the northeast at about 8-10 mph. ‚óØ [tool call] get_weather_forecast(lat = 42.3601, lon = -71.0589) ‚óè #> [{\"time\":\"2025-08-05 11:00:00 EDT\",\"temp\":76,\"dewpoint\":17.7778,\"hum‚Ä¶ #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-request request-id=\"tool_call_001\" tool-name=\"get_weather_forecast\" arguments=\"{&quot;lat&quot;:40.7128,&quot;lon&quot;:-74.006}\"><\/shiny-tool-request> #>   <\/div> #> <\/div> #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_002\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 40.7128, lon = -74.006)\" status=\"success\" show-request value=\"[&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 13:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 59,&#10;    &quot;dewpoint&quot;: 5,&#10;    &quot;humidity&quot;: 51,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Sunny&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 14:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 58,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 55,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 15:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 56,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 59,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 5,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 16:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 54,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 64,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 17:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 52,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 69,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 18:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 51,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 71,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 19:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 50,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 74,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 20:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 49,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 77,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 21:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 48,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 80,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 22:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 23:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  }&#10;]\" value-type=\"code\"><\/shiny-tool-result> #>   <\/div> #> <\/div> #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_001c\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 40.7128, lon = -74.006)\" status=\"error\" show-request value=\"object of type &#39;closure&#39; is not subsettable\" value-type=\"code\"><\/shiny-tool-result> #>   <\/div> #> <\/div> server <- function(input, output, session) {   client <- ellmer::chat(\"openai/gpt-4.1-nano\")   client$register_tool(get_weather_forecast)    observeEvent(input$chat_user_input, {     stream <- client$stream_async(input$chat_user_input, stream = \"content\")     chat_append(\"chat\", stream)   }) }"},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"via-tool-annotations","dir":"Articles","previous_headings":"Tool title and icon","what":"Via tool annotations","title":"Tool Calling UI","text":"can improve visual presentation adding annotations ellmer::tool() definition using ellmer::tool_annotations(). tool annotations include title icon, shinychat use tool request result displays. Now tool request shows custom title tool results show custom title icon.","code":"get_weather_forecast <- tool(   function(lat, lon) {     point_tomorrow(lat, lon, short = FALSE)   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\")   ),   annotations = tool_annotations(     title = \"Weather Forecast\",     icon = bsicons::bs_icon(\"cloud-sun\")   ) ) #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-request request-id=\"tool_call_003\" tool-name=\"get_weather_forecast\" arguments=\"{&quot;lat&quot;:42.3601,&quot;lon&quot;:-71.0589}\" tool-title=\"Weather Forecast\"><\/shiny-tool-request> #>   <\/div> #> <\/div> #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_004\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 42.3601, lon = -71.0589)\" status=\"success\" tool-title=\"Weather Forecast\" icon=\"&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 16 16&quot; class=&quot;bi bi-cloud-sun &quot; style=&quot;height:1em;width:1em;fill:currentColor;vertical-align:-0.125em;&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; &gt;&lt;path d=&quot;M7 8a3.5 3.5 0 0 1 3.5 3.555.5.5 0 0 0 .624.492A1.503 1.503 0 0 1 13 13.5a1.5 1.5 0 0 1-1.5 1.5H3a2 2 0 1 1 .1-3.998.5.5 0 0 0 .51-.375A3.502 3.502 0 0 1 7 8zm4.473 3a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 16h8.5a2.5 2.5 0 0 0 0-5h-.027z&quot;&gt;&lt;/path&gt;&#10;&lt;path d=&quot;M10.5 1.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0v-1zm3.743 1.964a.5.5 0 1 0-.707-.707l-.708.707a.5.5 0 0 0 .708.708l.707-.708zm-7.779-.707a.5.5 0 0 0-.707.707l.707.708a.5.5 0 1 0 .708-.708l-.708-.707zm1.734 3.374a2 2 0 1 1 3.296 2.198c.199.281.372.582.516.898a3 3 0 1 0-4.84-3.225c.352.011.696.055 1.028.129zm4.484 4.074c.6.215 1.125.59 1.522 1.072a.5.5 0 0 0 .039-.742l-.707-.707a.5.5 0 0 0-.854.377zM14.5 6.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\" show-request value=\"[&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 13:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 59,&#10;    &quot;dewpoint&quot;: 5,&#10;    &quot;humidity&quot;: 51,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Sunny&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 14:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 58,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 55,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 15:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 56,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 59,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 5,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 16:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 54,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 64,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 17:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 52,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 69,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 18:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 51,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 71,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 19:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 50,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 74,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 20:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 49,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 77,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 21:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 48,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 80,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 22:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 23:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  }&#10;]\" value-type=\"code\"><\/shiny-tool-result> #>   <\/div> #> <\/div>"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"via-the-tool-result","dir":"Articles","previous_headings":"Tool title and icon","what":"Via the tool result","title":"Tool Calling UI","text":"Using tool annotations easy way set title icon tool requests results, sometimes ‚Äôll want customize display specific tool calls results. cases, ‚Äôll need update tool function return ellmer::ContentToolResult object, takes extra property includes list extra data attach result. shinychat looks uses display list within extra customize tool result shown. properties can computed dynamically based tool‚Äôs input data prepares show LLM. list contains title icon items, values override values tool‚Äôs annotations. One useful strategy include display parameters tool‚Äôs function signature, allowing LLM include context additional information tool call. example , ‚Äôll let LLM write tool result title ‚Äôll pick icon based forecasted temperatures. Note need also update tool‚Äôs arguments include new location_name parameter LLM can provide meaningful title. Now tool result completed, shinychat shows custom title icon based forecasted temperature:","code":"get_weather_forecast <- tool(   function(lat, lon, location_name) {     forecast <- point_tomorrow(lat, lon, short = FALSE)      icon <- if (any(forecast$temp > 70)) {       bsicons::bs_icon(\"sun-fill\")     } else if (any(forecast$temp < 45)) {       bsicons::bs_icon(\"snow\")     } else {       bsicons::bs_icon(\"cloud-sun-fill\")     }      ContentToolResult(       forecast,       extra = list(         display = list(           title = paste(\"Weather Forecast for\", location_name),           icon = icon         )       )     )   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\"),     location_name = type_string(\"Name of the location for display to the user\")   ),   annotations = tool_annotations(     title = \"Weather Forecast\",     icon = bsicons::bs_icon(\"cloud-sun\")   ) ) #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_005\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 42.3601, lon = -71.0589, location_name = &quot;Boston, MA&quot;)\" status=\"success\" tool-title=\"Weather Forecast for Boston, MA\" icon=\"&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 16 16&quot; class=&quot;bi bi-cloud-sun-fill &quot; style=&quot;height:1em;width:1em;fill:currentColor;vertical-align:-0.125em;&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; &gt;&lt;path d=&quot;M11.473 11a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 16h8.5a2.5 2.5 0 0 0 0-5h-.027z&quot;&gt;&lt;/path&gt;&#10;&lt;path d=&quot;M10.5 1.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0v-1zm3.743 1.964a.5.5 0 1 0-.707-.707l-.708.707a.5.5 0 0 0 .708.708l.707-.708zm-7.779-.707a.5.5 0 0 0-.707.707l.707.708a.5.5 0 1 0 .708-.708l-.708-.707zm1.734 3.374a2 2 0 1 1 3.296 2.198c.199.281.372.582.516.898a3 3 0 1 0-4.84-3.225c.352.011.696.055 1.028.129zm4.484 4.074c.6.215 1.125.59 1.522 1.072a.5.5 0 0 0 .039-.742l-.707-.707a.5.5 0 0 0-.854.377zM14.5 6.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\" show-request value=\"[&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 13:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 59,&#10;    &quot;dewpoint&quot;: 5,&#10;    &quot;humidity&quot;: 51,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Sunny&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 14:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 58,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 55,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 6,&#10;    &quot;wind_dir&quot;: &quot;E&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 15:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 56,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 59,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 5,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Partly Cloudy&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 16:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 54,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 64,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SE&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 17:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 52,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 69,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 18:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 51,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 71,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 19:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 50,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 74,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;S&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 20:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 49,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 77,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 21:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 48,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 80,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 2,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 22:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  },&#10;  {&#10;    &quot;time&quot;: &quot;2025-10-02 23:00:00 EDT&quot;,&#10;    &quot;temp&quot;: 47,&#10;    &quot;dewpoint&quot;: 5.5556,&#10;    &quot;humidity&quot;: 83,&#10;    &quot;p_rain&quot;: 0,&#10;    &quot;wind_speed&quot;: 3,&#10;    &quot;wind_dir&quot;: &quot;SW&quot;,&#10;    &quot;skies&quot;: &quot;Mostly Clear&quot;,&#10;    &quot;geometry&quot;: {&#10;      &quot;type&quot;: &quot;Point&quot;,&#10;      &quot;coordinates&quot;: [-71.0589, 42.3601]&#10;    }&#10;  }&#10;]\" value-type=\"code\"><\/shiny-tool-result> #>   <\/div> #> <\/div>"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"tool-intent","dir":"Articles","previous_headings":"","what":"Tool intent","title":"Tool Calling UI","text":"last example, saw include arguments tool function let LLM write display text us (e.g., location name). strategy useful shinychat automatically supports `_intent` argument. `_intent` present tool‚Äôs arguments, shinychat shows value tool request result titles reason tool called. demonstrate, ‚Äôll use take break weather tool create tool simply generates random number. , tool doesn‚Äôt need arguments, include `_intent` argument tool function include description explain purpose. tool called, shinychat shows reason LLM called tool header tool card.","code":"tool_random_number <- tool(   function(`_intent`) {     runif(1)   },   name = \"tool_random_number\",   description = \"Generate a random number.\",   arguments = list(     `_intent` = type_string(       \"A short snippet used for display purposes to explain the call to the user.\"     )   ),   annotations = tool_annotations(     title = \"Random Number Generator\",     icon = bsicons::bs_icon(\"dice-3-fill\")   ) ) #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_006\" tool-name=\"tool_random_number\" request-call=\"tool_random_number(`_intent` = &quot;Generate a random number for testing&quot;)\" status=\"success\" tool-title=\"Random Number Generator\" icon=\"&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 16 16&quot; class=&quot;bi bi-dice-3-fill &quot; style=&quot;height:1em;width:1em;fill:currentColor;vertical-align:-0.125em;&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; &gt;&lt;path d=&quot;M3 0a3 3 0 0 0-3 3v10a3 3 0 0 0 3 3h10a3 3 0 0 0 3-3V3a3 3 0 0 0-3-3H3zm2.5 4a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm8 8a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zM8 9.5a1.5 1.5 0 1 1 0-3 1.5 1.5 0 0 1 0 3z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\" intent=\"Generate a random number for testing\" show-request value=\"0.6008\" value-type=\"code\"><\/shiny-tool-result> #>   <\/div> #> <\/div>"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"customizing-tool-result-display","dir":"Articles","previous_headings":"","what":"Customizing tool result display","title":"Tool Calling UI","text":"‚Äôve already seen can customize tool title icon returning ContentToolResult object tool function specifying title icon extra$display list. shinychat uses display list two additional categories customization: Alternative html, markdown, text show user place text value shown LLM. Options control tool result presented.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"alternative-display-content","dir":"Articles","previous_headings":"Customizing tool result display","what":"Alternative display content","title":"Tool Calling UI","text":"default, shinychat shows tool result‚Äôs value property code block user. often sufficient, cases tool may collect prepare data better presented users different format. example, weather tool returns data frame forecast next day. LLM sees JSON representation data frame, users likely prefer see nicely formatted table. shinychat looks following properties display list shows user first available display following order: html: HTML string object. can HTML generated via R packages like htmltools, gt, reactable even htmlwidgets. markdown: markdown string automatically rendered rich HTML shinychat. text: plain text string shown without code formatting. Keep mind content show users faithfully represent value shown LLM. weather tool great example‚ÄîJSON object isn‚Äôt user-friendly, table showing forecast data perfect.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"alternative-html-display","dir":"Articles","previous_headings":"Customizing tool result display > Alternative display content","what":"Alternative HTML display","title":"Tool Calling UI","text":"following example, ‚Äôll update get_weather_forecast() show user nicely formatted HTML table using gt. Expand tool result card see forecast table.","code":"get_weather_forecast <- tool(   function(lat, lon, location_name) {     forecast_data <- point_tomorrow(lat, lon, short = FALSE)     forecast_table <- gt::as_raw_html(gt::gt(forecast_data))      ContentToolResult(       forecast_data,       extra = list(         display = list(           html = forecast_table,           title = paste(\"Weather Forecast for\", location_name)         )       )     )   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\"),     location_name = type_string(\"Name of the location for display to the user\")   ),   annotations = tool_annotations(     title = \"Weather Forecast\",     icon = bsicons::bs_icon(\"cloud-sun\")   ) ) #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_007\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 42.3601, lon = -71.0589, location_name = &quot;Boston, MA&quot;)\" status=\"success\" tool-title=\"Weather Forecast for Boston, MA\" icon=\"&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 16 16&quot; class=&quot;bi bi-cloud-sun &quot; style=&quot;height:1em;width:1em;fill:currentColor;vertical-align:-0.125em;&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; &gt;&lt;path d=&quot;M7 8a3.5 3.5 0 0 1 3.5 3.555.5.5 0 0 0 .624.492A1.503 1.503 0 0 1 13 13.5a1.5 1.5 0 0 1-1.5 1.5H3a2 2 0 1 1 .1-3.998.5.5 0 0 0 .51-.375A3.502 3.502 0 0 1 7 8zm4.473 3a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 16h8.5a2.5 2.5 0 0 0 0-5h-.027z&quot;&gt;&lt;/path&gt;&#10;&lt;path d=&quot;M10.5 1.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0v-1zm3.743 1.964a.5.5 0 1 0-.707-.707l-.708.707a.5.5 0 0 0 .708.708l.707-.708zm-7.779-.707a.5.5 0 0 0-.707.707l.707.708a.5.5 0 1 0 .708-.708l-.708-.707zm1.734 3.374a2 2 0 1 1 3.296 2.198c.199.281.372.582.516.898a3 3 0 1 0-4.84-3.225c.352.011.696.055 1.028.129zm4.484 4.074c.6.215 1.125.59 1.522 1.072a.5.5 0 0 0 .039-.742l-.707-.707a.5.5 0 0 0-.854.377zM14.5 6.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\" show-request value=\"&lt;div id=&quot;efoodfieex&quot; style=&quot;padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;&quot;&gt;&#10;  &#10;  &lt;table class=&quot;gt_table&quot; data-quarto-disable-processing=&quot;false&quot; data-quarto-bootstrap=&quot;false&quot; style=&quot;-webkit-font-smoothing: antialiased; -moz-osx-font-smoothing: grayscale; font-family: system-ui, &#39;Segoe UI&#39;, Roboto, Helvetica, Arial, sans-serif, &#39;Apple Color Emoji&#39;, &#39;Segoe UI Emoji&#39;, &#39;Segoe UI Symbol&#39;, &#39;Noto Color Emoji&#39;; display: table; border-collapse: collapse; line-height: normal; margin-left: auto; margin-right: auto; color: #333333; font-size: 16px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3;&quot; bgcolor=&quot;#FFFFFF&quot;&gt;&#10;  &lt;thead style=&quot;border-style: none;&quot;&gt;&#10;    &lt;tr class=&quot;gt_col_headings&quot; style=&quot;border-style: none; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3;&quot;&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_left&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;time&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: left;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;left&quot;&gt;time&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_right&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;temp&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;right&quot;&gt;temp&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_right&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;dewpoint&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;right&quot;&gt;dewpoint&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_right&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;humidity&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;right&quot;&gt;humidity&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_right&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;p_rain&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;right&quot;&gt;p_rain&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_right&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;wind_speed&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;right&quot;&gt;wind_speed&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_left&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;wind_dir&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: left;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;left&quot;&gt;wind_dir&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_left&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;skies&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: left;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;left&quot;&gt;skies&lt;/th&gt;&#10;      &lt;th class=&quot;gt_col_heading gt_columns_bottom_border gt_center&quot; rowspan=&quot;1&quot; colspan=&quot;1&quot; scope=&quot;col&quot; id=&quot;geometry&quot; style=&quot;border-style: none; color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: normal; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; text-align: center;&quot; bgcolor=&quot;#FFFFFF&quot; valign=&quot;bottom&quot; align=&quot;center&quot;&gt;geometry&lt;/th&gt;&#10;    &lt;/tr&gt;&#10;  &lt;/thead&gt;&#10;  &lt;tbody class=&quot;gt_table_body&quot; style=&quot;border-style: none; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3;&quot;&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 13:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;59&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.000000&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;51&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;6&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;E&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Sunny&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 14:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;58&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;55&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;6&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;E&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Partly Cloudy&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 15:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;56&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;59&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SE&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Partly Cloudy&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 16:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;54&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;64&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;3&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SE&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 17:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;52&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;69&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;2&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;S&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 18:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;51&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;71&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;2&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;S&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 19:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;50&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;74&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;2&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;S&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 20:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;49&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;77&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;2&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SW&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 21:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;48&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;80&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;2&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SW&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 22:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;47&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;83&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;3&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SW&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;    &lt;tr style=&quot;border-style: none;&quot;&gt;&lt;td headers=&quot;time&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;2025-10-02 23:00:00 EDT&lt;/td&gt;&#10;&lt;td headers=&quot;temp&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;47&lt;/td&gt;&#10;&lt;td headers=&quot;dewpoint&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;5.555556&lt;/td&gt;&#10;&lt;td headers=&quot;humidity&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;83&lt;/td&gt;&#10;&lt;td headers=&quot;p_rain&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;0&lt;/td&gt;&#10;&lt;td headers=&quot;wind_speed&quot; class=&quot;gt_row gt_right&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: right; font-variant-numeric: tabular-nums;&quot; valign=&quot;middle&quot; align=&quot;right&quot;&gt;3&lt;/td&gt;&#10;&lt;td headers=&quot;wind_dir&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;SW&lt;/td&gt;&#10;&lt;td headers=&quot;skies&quot; class=&quot;gt_row gt_left&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: left;&quot; valign=&quot;middle&quot; align=&quot;left&quot;&gt;Mostly Clear&lt;/td&gt;&#10;&lt;td headers=&quot;geometry&quot; class=&quot;gt_row gt_center&quot; style=&quot;border-style: none; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; text-align: center;&quot; valign=&quot;middle&quot; align=&quot;center&quot;&gt;c(-71.0589, 42.3601)&lt;/td&gt;&lt;/tr&gt;&#10;  &lt;/tbody&gt;&#10;  &#10;&lt;/table&gt;&#10;&lt;/div&gt;\" value-type=\"html\"><\/shiny-tool-result> #>   <\/div> #> <\/div>"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"alternative-markdown-display","dir":"Articles","previous_headings":"Customizing tool result display > Alternative display content","what":"Alternative markdown display","title":"Tool Calling UI","text":"can also prepare markdown content show users based tool result. ‚Äôs less appropriate weather tool, use markdown summarize forecast sentences.","code":"get_weather_forecast <- tool(   function(lat, lon, location_name) {     forecast_data <- point_tomorrow(lat, lon, short = FALSE)      temp_current <- forecast_data$temp[1]     skies_current <- forecast_data$skies[[1]]      temp_high <- max(forecast_data$temp)     temp_low <- min(forecast_data$temp)      humidity <- round(mean(forecast_data$humidity), 1)     skies <- table(forecast_data$skies)     skies <- names(skies)[which.max(skies)]      forecast_summary <- glue::glue(       \"In **{location_name}**, it's currently {temp_current}¬∞F with _{tolower(skies_current)}_ skies. \",       \"Today's high will be {temp_high}¬∞F and the low will be {temp_low}¬∞F. \",       \"Humidity is around {humidity}%. \",       \"Look for **{tolower(skies)}** skies throughout the day.\"     )      ContentToolResult(       forecast_data,       extra = list(         display = list(           markdown = forecast_summary,           title = paste(\"Weather Forecast for\", location_name)         )       )     )   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\"),     location_name = type_string(\"Name of the location for display to the user\")   ),   annotations = tool_annotations(     title = \"Weather Forecast\",     icon = bsicons::bs_icon(\"cloud-sun\")   ) ) #> <div class=\"container-fluid\"> #>   <div class=\"m-3\"> #>     <shiny-tool-result request-id=\"tool_call_008\" tool-name=\"get_weather_forecast\" request-call=\"get_weather_forecast(lat = 42.3601, lon = -71.0589, location_name = &quot;Boston, MA&quot;)\" status=\"success\" tool-title=\"Weather Forecast for Boston, MA\" icon=\"&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; viewBox=&quot;0 0 16 16&quot; class=&quot;bi bi-cloud-sun &quot; style=&quot;height:1em;width:1em;fill:currentColor;vertical-align:-0.125em;&quot; aria-hidden=&quot;true&quot; role=&quot;img&quot; &gt;&lt;path d=&quot;M7 8a3.5 3.5 0 0 1 3.5 3.555.5.5 0 0 0 .624.492A1.503 1.503 0 0 1 13 13.5a1.5 1.5 0 0 1-1.5 1.5H3a2 2 0 1 1 .1-3.998.5.5 0 0 0 .51-.375A3.502 3.502 0 0 1 7 8zm4.473 3a4.5 4.5 0 0 0-8.72-.99A3 3 0 0 0 3 16h8.5a2.5 2.5 0 0 0 0-5h-.027z&quot;&gt;&lt;/path&gt;&#10;&lt;path d=&quot;M10.5 1.5a.5.5 0 0 0-1 0v1a.5.5 0 0 0 1 0v-1zm3.743 1.964a.5.5 0 1 0-.707-.707l-.708.707a.5.5 0 0 0 .708.708l.707-.708zm-7.779-.707a.5.5 0 0 0-.707.707l.707.708a.5.5 0 1 0 .708-.708l-.708-.707zm1.734 3.374a2 2 0 1 1 3.296 2.198c.199.281.372.582.516.898a3 3 0 1 0-4.84-3.225c.352.011.696.055 1.028.129zm4.484 4.074c.6.215 1.125.59 1.522 1.072a.5.5 0 0 0 .039-.742l-.707-.707a.5.5 0 0 0-.854.377zM14.5 6.5a.5.5 0 0 0 0 1h1a.5.5 0 0 0 0-1h-1z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;\" show-request value=\"In **Boston, MA**, it&#39;s currently 59¬∞F with _mostly sunny_ skies. Today&#39;s high will be 59¬∞F and the low will be 47¬∞F. Humidity is around 69.6%. Look for **mostly clear** skies throughout the day.\" value-type=\"markdown\"><\/shiny-tool-result> #>   <\/div> #> <\/div>"},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"display-options","dir":"Articles","previous_headings":"Customizing tool result display","what":"Display Options","title":"Tool Calling UI","text":"addition customizing tool title icon providing alternative display content, can also control tool result presented using options display list. shinychat supports several options display list control results presented: show_request = FALSE: Hide tool call details tool results display. useful rich output tool call details clear rest display. example, might appropriate hide request details showing full formatted table results. open = TRUE: Expand result panel default. useful ‚Äôve customized tool display include {htmlwidget} rich content users see immediately. title icon: Choose title icon displayed tool result card header.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/articles/tool-ui.html","id":"global-display-options","dir":"Articles","previous_headings":"","what":"Global display options","title":"Tool Calling UI","text":"shinychat uses rich tool UI described default, can choose hide tool calls use shinychat‚Äôs basic display without allowing rich alternative content displays. users won‚Äôt need customize options, can useful use basic display debugging verification purposes need see tool arguments outputs exactly written seen LLM. adjust display debugging verification purposes, set shinychat.tool_display option (SHINYCHAT_TOOL_DISPLAY environment variable) one following values: users, default \"rich\" display provides best experience.","code":"# Disable tool UI entirely options(shinychat.tool_display = \"none\")  # Use basic text-based display (useful for verifying inputs/outputs) options(shinychat.tool_display = \"basic\")  # Default rich display applies customizations from tool authors options(shinychat.tool_display = \"rich\")"},{"path":"https://posit-dev.github.io/shinychat/r/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Joe Cheng. Author. Carson Sievert. Author. Garrick Aden-Buie. Author, maintainer. Barret Schloerke. Author. . Copyright holder, funder.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Cheng J, Sievert C, Aden-Buie G, Schloerke B (2025). shinychat: Chat UI Component 'shiny'. R package version 0.2.0.9000, https://posit-dev.github.io/shinychat/r/.","code":"@Manual{,   title = {shinychat: Chat UI Component for 'shiny'},   author = {Joe Cheng and Carson Sievert and Garrick Aden-Buie and Barret Schloerke},   year = {2025},   note = {R package version 0.2.0.9000},   url = {https://posit-dev.github.io/shinychat/r/}, }"},{"path":"https://posit-dev.github.io/shinychat/r/index.html","id":"shinychat-","dir":"","previous_headings":"","what":"Chat UI Component for shiny","title":"Chat UI Component for shiny","text":"shinychat provides Shiny toolkit building generative AI applications like chatbots streaming content. ‚Äôs designed work alongside ellmer package, handles response generation.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Chat UI Component for shiny","text":"can install shinychat CRAN : , install development version shinychat GitHub :","code":"install.packages(\"shinychat\") # install.packages(\"pak\") pak::pak(\"posit-dev/shinychat/pkg-r\")"},{"path":"https://posit-dev.github.io/shinychat/r/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Chat UI Component for shiny","text":"run example, ‚Äôll first need create OpenAI API key, set environment OPENAI_API_KEY. ‚Äôll also need install ellmer package (install.packages(\"ellmer\")).","code":"library(shiny) library(shinychat)  ui <- bslib::page_fillable(   chat_ui(     id = \"chat\",     messages = \"**Hello!** How can I help you today?\"   ),   fillable_mobile = TRUE )  server <- function(input, output, session) {   chat <-     ellmer::chat_openai(       system_prompt = \"Respond to the user as succinctly as possible.\"     )    observeEvent(input$chat_user_input, {     stream <- chat$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server)"},{"path":"https://posit-dev.github.io/shinychat/r/index.html","id":"next-steps","dir":"","previous_headings":"","what":"Next steps","title":"Chat UI Component for shiny","text":"Ready start building chatbot shinychat? See Get Started learn .","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":null,"dir":"Reference","previous_headings":"","what":"Open a live chat application in the browser ‚Äî chat_app","title":"Open a live chat application in the browser ‚Äî chat_app","text":"Create simple Shiny app live chatting using ellmer::Chat object. Note functions mutate input client object chat turns appended history. app created chat_app() suitable interactive use single user. multi-user Shiny apps, use Shiny module chat functions ‚Äì chat_mod_ui() chat_mod_server() ‚Äì sure create new chat client user session.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Open a live chat application in the browser ‚Äî chat_app","text":"","code":"chat_app(client, ..., bookmark_store = \"url\")  chat_mod_ui(id, ..., client = deprecated(), messages = NULL)  chat_mod_server(   id,   client,   bookmark_on_input = TRUE,   bookmark_on_response = TRUE )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Open a live chat application in the browser ‚Äî chat_app","text":"client chat object created ellmer, e.g. ellmer::chat_openai() friends. argument deprecated chat_mod_ui() client state now managed chat_mod_server(). ... chat_app(), additional arguments passed shiny::shinyApp(). chat_mod_ui(), additional arguments passed chat_ui(). bookmark_store bookmarking store use app. Passed enable_bookmarking shiny::shinyApp(). Defaults \"url\", uses URL store chat state. URL-based bookmarking limited size; use \"server\" store state server side without size limitations; disable bookmarking setting \"disable\". id chat module ID. messages Initial messages shown chat, used client (chat_mod_ui()) already contain turns. Passed messages chat_ui(). bookmark_on_input logical value determines bookmark updated user submits message. Default TRUE. bookmark_on_response logical value determines bookmark updated response stream completes. Default TRUE.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Open a live chat application in the browser ‚Äî chat_app","text":"chat_app() returns shiny::shinyApp() object. chat_mod_ui() returns UI shinychat module. chat_mod_server() includes shinychat module server logic, returns list containing: last_input: reactive value containing last user input. last_turn: reactive value containing last assistant turn. update_user_input(): function update chat input submit new user input. Takes arguments update_chat_user_input(), except id session, supplied automatically. append(): function append new message chat UI. Takes arguments chat_append(), except id session, supplied automatically. clear(): function clear chat history chat UI. clear() takes optional list messages used initialize chat clearing. messages list messages, message list role content fields. client_history argument controls chat client's history updated clearing. can one : \"clear\" chat history; \"set\" chat history messages; \"append\" messages existing chat history; \"keep\" existing chat history. client: chat client object, mutated chat.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Open a live chat application in the browser ‚Äî chat_app","text":"chat_app(): simple Shiny app live chatting. Note app suitable interactive use single user; use chat_app() multi-user Shiny app context. chat_mod_ui(): simple chat app module UI. chat_mod_server(): simple chat app module server.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_app.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Open a live chat application in the browser ‚Äî chat_app","text":"","code":"if (FALSE) { # \\dontrun{ # Interactive in the console ---- client <- ellmer::chat_anthropic() chat_app(client)  # Inside a Shiny app ---- library(shiny) library(bslib) library(shinychat)  ui <- page_fillable(   titlePanel(\"shinychat example\"),    layout_columns(     card(       card_header(\"Chat with Claude\"),       chat_mod_ui(         \"claude\",         messages = list(           \"Hi! Use this chat interface to chat with Anthropic's `claude-3-5-sonnet`.\"         )       )     ),     card(       card_header(\"Chat with ChatGPT\"),       chat_mod_ui(         \"openai\",         messages = list(           \"Hi! Use this chat interface to chat with OpenAI's `gpt-4o`.\"         )       )     )   ) )  server <- function(input, output, session) {   claude <- ellmer::chat_anthropic(model = \"claude-3-5-sonnet-latest\") # Requires ANTHROPIC_API_KEY   openai <- ellmer::chat_openai(model = \"gpt-4o\") # Requires OPENAI_API_KEY    chat_mod_server(\"claude\", claude)   chat_mod_server(\"openai\", openai) }  shinyApp(ui, server) } # }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":null,"dir":"Reference","previous_headings":"","what":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"chat_append function appends message existing chat_ui(). response can string, string generator, string promise, string promise generator (returned 'ellmer' package's chat, stream, chat_async, stream_async methods, respectively). function called Shiny app's server. generally used append client's response chat, user messages added chat UI automatically front-end. need use chat_append(role=\"user\") programmatically generating queries server sending behalf user, want reflected UI.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"","code":"chat_append(   id,   response,   role = c(\"assistant\", \"user\"),   icon = NULL,   session = getDefaultReactiveDomain() )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"id ID chat element response message message stream append chat element. actual message content can one following: string, interpreted markdown rendered HTML client. prevent interpreting markdown, mark string htmltools::HTML(). UI element. includes htmltools::tagList(), take UI elements (including strings) children. case, strings still interpreted markdown long inside HTML. role role message (either \"assistant\" \"user\"). Defaults \"assistant\". icon optional icon display next message, currently used assistant messages. icon can HTML element (e.g., htmltools::img() tag) string HTML. session Shiny session object","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"Returns promise resolves contents stream, error. promise resolves message successfully sent client; note guarantee message actually received rendered client. promise rejects error occurs processing response (see \"Error handling\" section).","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":"error-handling","dir":"Reference","previous_headings":"","what":"Error handling","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"response argument generator, promise, promise generator, error occurs producing message (e.g., iteration stream_async fails), promise returned chat_append reject error. chat_append call last expression Shiny observer, Shiny see observer failed, end user session. prefer handle error gracefully, use promises::catch() promise returned chat_append.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Append an assistant response (or user message) to a chat control ‚Äî chat_append","text":"","code":"if (FALSE) { # interactive() library(shiny) library(coro) library(bslib) library(shinychat)  # Dumbest chatbot in the world: ignores user input and chooses # a random, vague response. fake_chatbot <- async_generator(function(input) {   responses <- c(     \"What does that suggest to you?\",     \"I see.\",     \"I'm not sure I understand you fully.\",     \"What do you think?\",     \"Can you elaborate on that?\",     \"Interesting question! Let's examine thi... **See more**\"   )    await(async_sleep(1))   for (chunk in strsplit(sample(responses, 1), \"\")[[1]]) {     yield(chunk)     await(async_sleep(0.02))   } })  ui <- page_fillable(   chat_ui(\"chat\", fill = TRUE) )  server <- function(input, output, session) {   observeEvent(input$chat_user_input, {     response <- fake_chatbot(input$chat_user_input)     chat_append(\"chat\", response)   }) }  shinyApp(ui, server) }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append_message.html","id":null,"dir":"Reference","previous_headings":"","what":"Low-level function to append a message to a chat control ‚Äî chat_append_message","title":"Low-level function to append a message to a chat control ‚Äî chat_append_message","text":"advanced users want control message chunking behavior. users use chat_append() instead.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append_message.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Low-level function to append a message to a chat control ‚Äî chat_append_message","text":"","code":"chat_append_message(   id,   msg,   chunk = TRUE,   operation = c(\"append\", \"replace\"),   icon = NULL,   session = getDefaultReactiveDomain() )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append_message.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Low-level function to append a message to a chat control ‚Äî chat_append_message","text":"id ID chat element msg message append. named list role content fields. role field either \"user\" \"assistant\". content field string containing message content, Markdown format. chunk Whether msg just chunk message, , type. FALSE, msg complete message. \"start\", msg first chunk multi-chunk message. \"end\", msg last chunk multi-chunk message. TRUE, msg intermediate chunk multi-chunk message. Default FALSE. operation operation perform message. \"append\", new content appended existing message content. \"replace\", existing message content replaced new content. Ignored chunk FALSE. icon optional icon display next message, currently used assistant messages. icon can HTML element (e.g., htmltools::img() tag) string HTML. session Shiny session object","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append_message.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Low-level function to append a message to a chat control ‚Äî chat_append_message","text":"Returns nothing (invisible(NULL)).","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_append_message.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Low-level function to append a message to a chat control ‚Äî chat_append_message","text":"","code":"if (FALSE) { # interactive() library(shiny) library(coro) library(bslib) library(shinychat)  # Dumbest chatbot in the world: ignores user input and chooses # a random, vague response. fake_chatbot <- async_generator(function(id, input) {   responses <- c(     \"What does that suggest to you?\",     \"I see.\",     \"I'm not sure I understand you fully.\",     \"What do you think?\",     \"Can you elaborate on that?\",     \"Interesting question! Let's examine thi... **See more**\"   )    # Use low-level chat_append_message() to temporarily set a progress message   chat_append_message(id, list(role = \"assistant\", content = \"_Thinking..._ \"))   await(async_sleep(1))   # Clear the progress message   chat_append_message(id, list(role = \"assistant\", content = \"\"), operation = \"replace\")    for (chunk in strsplit(sample(responses, 1), \"\")[[1]]) {     yield(chunk)     await(async_sleep(0.02))   } })  ui <- page_fillable(   chat_ui(\"chat\", fill = TRUE) )  server <- function(input, output, session) {   observeEvent(input$chat_user_input, {     response <- fake_chatbot(\"chat\", input$chat_user_input)     chat_append(\"chat\", response)   }) }  shinyApp(ui, server) }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_clear.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear all messages from a chat control ‚Äî chat_clear","title":"Clear all messages from a chat control ‚Äî chat_clear","text":"Clear messages chat control","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_clear.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear all messages from a chat control ‚Äî chat_clear","text":"","code":"chat_clear(id, session = getDefaultReactiveDomain())"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_clear.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear all messages from a chat control ‚Äî chat_clear","text":"id ID chat element session Shiny session object","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_clear.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear all messages from a chat control ‚Äî chat_clear","text":"","code":"if (FALSE) { # interactive()  library(shiny) library(bslib)  ui <- page_fillable(   chat_ui(\"chat\", fill = TRUE),   actionButton(\"clear\", \"Clear chat\") )  server <- function(input, output, session) {   observeEvent(input$clear, {     chat_clear(\"chat\")   })    observeEvent(input$chat_user_input, {     response <- paste0(\"You said: \", input$chat_user_input)     chat_append(\"chat\", response)   }) }  shinyApp(ui, server) }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_restore.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","title":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","text":"Adds Shiny bookmarking hooks save restore ellmer chat client. Also restores chat messages history client. either bookmark_on_input bookmark_on_response TRUE, Shiny App's bookmark automatically updated without showing modal user. Note: client's chat state saved/restored bookmark. client's state properly capture chat's UI (.e., transformation applied -receiving displaying message), may need implement session$onRestore() (possibly session$onBookmark) handler restore additional state. avoid restoring chat history client, can ensure history empty calling client$set_turns(list()) passing client chat_restore().","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_restore.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","text":"","code":"chat_restore(   id,   client,   ...,   bookmark_on_input = TRUE,   bookmark_on_response = TRUE,   session = getDefaultReactiveDomain() )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_restore.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","text":"id ID chat element client ellmer LLM chat client. ... Used future parameter expansion. bookmark_on_input logical value determines bookmark updated user submits message. Default TRUE. bookmark_on_response logical value determines bookmark updated response stream completes. Default TRUE. session Shiny session object","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_restore.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","text":"Returns nothing (invisible(NULL)).","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_restore.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Shiny bookmarking for shinychat ‚Äî chat_restore","text":"","code":"if (FALSE) { # interactive() library(shiny) library(bslib) library(shinychat)  ui <- function(request) {   page_fillable(     chat_ui(\"chat\", fill = TRUE)   ) }  server <- function(input, output, session) {   chat_client <- ellmer::chat_ollama(     system_prompt = \"Important: Always respond in a limerick\",     model = \"qwen2.5-coder:1.5b\",     echo = TRUE   )   # Update bookmark to chat on user submission and completed response   chat_restore(\"chat\", chat_client)    observeEvent(input$chat_user_input, {     stream <- chat_client$stream_async(input$chat_user_input)     chat_append(\"chat\", stream)   }) }  # Enable bookmarking! shinyApp(ui, server, enableBookmarking = \"server\") }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_ui.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a chat UI element ‚Äî chat_ui","title":"Create a chat UI element ‚Äî chat_ui","text":"Inserts chat UI element Shiny UI, includes scrollable section displaying chat messages, input field user enter new messages. respond user input, listen input$ID_user_input (example, id=\"my_chat\", user input input$my_chat_user_input), use chat_append() append messages chat.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_ui.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a chat UI element ‚Äî chat_ui","text":"","code":"chat_ui(   id,   ...,   messages = NULL,   placeholder = \"Enter a message...\",   width = \"min(680px, 100%)\",   height = \"auto\",   fill = TRUE,   icon_assistant = NULL )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_ui.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a chat UI element ‚Äî chat_ui","text":"id ID chat element ... Extra HTML attributes include chat element messages list messages prepopulate chat . message can one following: string, interpreted markdown rendered HTML client. prevent interpreting markdown, mark string htmltools::HTML(). UI element. includes htmltools::tagList(), take UI elements (including strings) children. case, strings still interpreted markdown long inside HTML. named list content role. content can contain content described , role can \"assistant\" \"user\". placeholder placeholder text chat's user input field width CSS width chat element height CSS height chat element fill Whether chat element try vertically fill container, container fillable icon_assistant icon use assistant chat messages. Can HTML tag form htmltools::HTML() htmltools::tags(). None, default robot icon used.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_ui.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a chat UI element ‚Äî chat_ui","text":"Shiny tag object, suitable inclusion Shiny UI","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/chat_ui.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a chat UI element ‚Äî chat_ui","text":"","code":"if (FALSE) { # interactive() library(shiny) library(bslib) library(shinychat)  ui <- page_fillable(   chat_ui(\"chat\", fill = TRUE) )  server <- function(input, output, session) {   observeEvent(input$chat_user_input, {     # In a real app, this would call out to a chat client or API,     # perhaps using the 'ellmer' package.     response <- paste0(       \"You said:\\n\\n\",       \"<blockquote>\",       htmltools::htmlEscape(input$chat_user_input),       \"<\/blockquote>\"     )     chat_append(\"chat\", response)     chat_append(\"chat\", stream)   }) }  shinyApp(ui, server) }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/contents_shinychat.html","id":null,"dir":"Reference","previous_headings":"","what":"Format ellmer content for shinychat ‚Äî contents_shinychat","title":"Format ellmer content for shinychat ‚Äî contents_shinychat","text":"Format ellmer content shinychat","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/contents_shinychat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Format ellmer content for shinychat ‚Äî contents_shinychat","text":"","code":"contents_shinychat(content)"},{"path":"https://posit-dev.github.io/shinychat/r/reference/contents_shinychat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Format ellmer content for shinychat ‚Äî contents_shinychat","text":"content ellmer::Content object.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/contents_shinychat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Format ellmer content for shinychat ‚Äî contents_shinychat","text":"Returns text, HTML, web component tags formatted use chat_ui().","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/contents_shinychat.html","id":"extending-contents-shinychat-","dir":"Reference","previous_headings":"","what":"Extending contents_shinychat()","title":"Format ellmer content for shinychat ‚Äî contents_shinychat","text":"can extend contents_shinychat() handle custom content types application. contents_shinychat() S7 generic. worked S7 , can learn S7 classes, generics methods S7 documentation. work short example creating custom display results tool gets local weather forecasts. first need create custom class extends ellmer::ContentToolResult.   Next, create simple ellmer::tool() gets weather forecast location returns custom WeatherToolResult class. custom class works just like regular ContentToolResult, additional location_name property.   Finally, can extend contents_shinychat() render custom content class display chat interface. basic process define contents_shinychat() external generic implement method custom class.   can use pattern completely customize content displayed inside shinychat returning HTML objects directly method. can also use pattern build upon default shinychat display tool requests results. using S7::super(), can create object shinychat uses tool results (tool requests), modify suit needs.   Note need create new class extend contents_shinychat() customize tool display. Rather, can use strategies discussed Tool Calling UI article customize tool request result display providing display list extra argument tool result.","code":"library(ellmer)  WeatherToolResult <- S7::new_class(   \"WeatherToolResult\",   parent = ContentToolResult,   properties = list(     location_name = S7::class_character   ) ) get_weather_forecast <- tool(   function(lat, lon, location_name) {     WeatherToolResult(       weathR::point_tomorrow(lat, lon, short = FALSE),       location_name = location_name     )   },   name = \"get_weather_forecast\",   description = \"Get the weather forecast for a location.\",   arguments = list(     lat = type_number(\"Latitude\"),     lon = type_number(\"Longitude\"),     location_name = type_string(\"Name of the location for display to the user\")   ) ) contents_shinychat <- S7::new_external_generic(   package = \"shinychat\",   name = \"contents_shinychat\",   dispatch_args = \"contents\" )  S7::method(contents_shinychat, WeatherToolResult) <- function(content) {   # Your custom rendering logic here } S7::method(contents_shinychat, WeatherToolResult) <- function(content) {   # Call the super method for ContentToolResult to get shinychat's defaults   res <- contents_shinychat(S7::super(content, ContentToolResult))    # Then update the result object with more specific content   # In this case, we render the tool result dataframe as a {gt} table...   res$value <- gt::as_raw_html(gt::gt(content@value))   res$value_type <- \"html\"   # ...and update the tool result title to include the location name   res$title <- paste(\"Weather Forecast for\", content@location_name)    res }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/markdown_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Stream markdown content ‚Äî markdown_stream","title":"Stream markdown content ‚Äî markdown_stream","text":"Streams markdown content output_markdown_stream() UI element.  markdown stream can useful displaying generative AI responses (outside chat interface), streaming logs, use cases chunks content generated time.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/markdown_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stream markdown content ‚Äî markdown_stream","text":"","code":"markdown_stream(   id,   content_stream,   operation = c(\"replace\", \"append\"),   session = getDefaultReactiveDomain() )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/markdown_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stream markdown content ‚Äî markdown_stream","text":"id ID markdown stream stream content . content_stream string generator (e.g., coro::generator() coro::async_generator()), string promise (e.g., promises::promise()), string promise generator. operation operation perform markdown stream. default, \"replace\", replace current content new content stream. option, \"append\", append new content stream existing content. session Shiny session object.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/markdown_stream.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Stream markdown content ‚Äî markdown_stream","text":"","code":"if (FALSE) { # interactive()  library(shiny) library(coro) library(bslib) library(shinychat)  # Define a generator that yields a random response # (imagine this is a more sophisticated AI generator) random_response_generator <- async_generator(function() {   responses <- c(     \"What does that suggest to you?\",     \"I see.\",     \"I'm not sure I understand you fully.\",     \"What do you think?\",     \"Can you elaborate on that?\",     \"Interesting question! Let's examine thi... **See more**\"   )    await(async_sleep(1))   for (chunk in strsplit(sample(responses, 1), \"\")[[1]]) {     yield(chunk)     await(async_sleep(0.02))   } })  ui <- page_fillable(   actionButton(\"generate\", \"Generate response\"),   output_markdown_stream(\"stream\") )  server <- function(input, output, session) {   observeEvent(input$generate, {     markdown_stream(\"stream\", random_response_generator())   }) }  shinyApp(ui, server) }"},{"path":"https://posit-dev.github.io/shinychat/r/reference/output_markdown_stream.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a UI element for a markdown stream. ‚Äî output_markdown_stream","title":"Create a UI element for a markdown stream. ‚Äî output_markdown_stream","text":"Creates UI element markdown_stream(). markdown stream can useful displaying generative AI responses (outside chat interface), streaming logs, use cases chunks content generated time.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/output_markdown_stream.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a UI element for a markdown stream. ‚Äî output_markdown_stream","text":"","code":"output_markdown_stream(   id,   ...,   content = \"\",   content_type = \"markdown\",   auto_scroll = TRUE,   width = \"min(680px, 100%)\",   height = \"auto\" )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/output_markdown_stream.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a UI element for a markdown stream. ‚Äî output_markdown_stream","text":"id unique identifier markdown stream. ... Extra HTML attributes include chat element content string content display streaming occurs. content_type Markdown HTML, may also UI element(s) input output bindings. content_type content type. Default \"markdown\" (specifically, CommonMark). Supported content types include: * \"markdown\": markdown text, specifically CommonMark * \"html\": rendering HTML content. * \"text\": plain text. * \"semi-markdown\": rendering markdown, HTML tags escaped. auto_scroll Whether automatically scroll bottom scrollable container new content added. Default True. width width UI element. height height UI element.","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/output_markdown_stream.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a UI element for a markdown stream. ‚Äî output_markdown_stream","text":"shiny tag object.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/reference/shinychat-package.html","id":null,"dir":"Reference","previous_headings":"","what":"shinychat: Chat UI Component for 'shiny' ‚Äî shinychat-package","title":"shinychat: Chat UI Component for 'shiny' ‚Äî shinychat-package","text":"Provides scrolling chat interface multiline input, suitable creating chatbot apps based Large Language Models (LLMs). Designed work particularly well 'ellmer' R package calling LLMs.","code":""},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/reference/shinychat-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"shinychat: Chat UI Component for 'shiny' ‚Äî shinychat-package","text":"Maintainer: Garrick Aden-Buie garrick@adenbuie.com (ORCID) Authors: Joe Cheng joe@posit.co Carson Sievert carson@posit.co Barret Schloerke barret@posit.co (ORCID) contributors: Posit Software, PBC (ROR) [copyright holder, funder]","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/update_chat_user_input.html","id":null,"dir":"Reference","previous_headings":"","what":"Update the user input of a chat control ‚Äî update_chat_user_input","title":"Update the user input of a chat control ‚Äî update_chat_user_input","text":"Update user input chat control","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/update_chat_user_input.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Update the user input of a chat control ‚Äî update_chat_user_input","text":"","code":"update_chat_user_input(   id,   ...,   value = NULL,   placeholder = NULL,   submit = FALSE,   focus = FALSE,   session = getDefaultReactiveDomain() )"},{"path":"https://posit-dev.github.io/shinychat/r/reference/update_chat_user_input.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Update the user input of a chat control ‚Äî update_chat_user_input","text":"id ID chat element ... Currently unused, reserved future use. value value set user input . NULL, input updated. placeholder placeholder text user input submit Whether automatically submit text user. Requires value. focus Whether move focus input element. Requires value. session Shiny session object","code":""},{"path":"https://posit-dev.github.io/shinychat/r/reference/update_chat_user_input.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Update the user input of a chat control ‚Äî update_chat_user_input","text":"","code":"if (FALSE) { # interactive() library(shiny) library(bslib) library(shinychat)  ui <- page_fillable(   chat_ui(\"chat\"),   layout_columns(     fill = FALSE,     actionButton(\"update_placeholder\", \"Update placeholder\"),     actionButton(\"update_value\", \"Update user input\")   ) )  server <- function(input, output, session) {   observeEvent(input$update_placeholder, {     update_chat_user_input(\"chat\", placeholder = \"New placeholder text\")   })    observeEvent(input$update_value, {     update_chat_user_input(\"chat\", value = \"New user input\", focus = TRUE)   })    observeEvent(input$chat_user_input, {     response <- paste0(\"You said: \", input$chat_user_input)     chat_append(\"chat\", response)   }) }  shinyApp(ui, server) }"},{"path":[]},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"new-features-development-version","dir":"Changelog","previous_headings":"","what":"New features","title":"shinychat (development version)","text":"Added chat_restore() adds Shiny bookmarking hooks save restore ellmer chat client. (#28, #82) Added update_chat_user_input() programmatically updating user input chat UI element. (#78) shinychat now shows tool call request results UI, feature enabled default chat_app() chat module (chat_mod_server()). using chat_append() chat_ui(), set stream = \"content\" call $stream_async() method ellmer::Chat client ensure tool calls included chat stream output. Learn tool calling UI article. (#52) Added chat_append(icon=...) chat_ui(icon_assistant=...) customizing icon appears next assistant responses. (#88) chat_mod_server() now returns list reactives last_input last_turn, well functions update_user_input(), append() clear() chat. (#130, #143, #145)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"improvements-development-version","dir":"Changelog","previous_headings":"","what":"Improvements","title":"shinychat (development version)","text":"chat_app() now correctly restores chat client state refreshing app, e.g.¬†reloading page. (#71) External links chat messages chat_ui() now open new tab default, confirmation dialog. (#120)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"bug-fixes-development-version","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinychat (development version)","text":"chat input longer submits incomplete text user activated IME completions (e.g.¬†typing Japanese Chinese). (#85)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"internal-changes-development-version","dir":"Changelog","previous_headings":"","what":"Internal changes","title":"shinychat (development version)","text":"consolidated <shiny-chat-message> <shiny-user-message> components single <shiny-chat-message> component data-role attribute indicate whether ‚Äôs ‚Äúassistant‚Äù ‚Äúuser‚Äù message. likely minimal impact apps, custom styles. update shiny-user-message rules use shiny-chat-message[data-role=\"user\"]. (#101)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"shinychat-020","dir":"Changelog","previous_headings":"","what":"shinychat 0.2.0","title":"shinychat 0.2.0","text":"CRAN release: 2025-05-16","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"new-features-and-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"New features and improvements","title":"shinychat 0.2.0","text":"Added new output_markdown_stream() markdown_stream() functions allow streaming markdown content client. useful showing Generative AI responses real-time Shiny app, outside chat interface. (#23) chat_ui() output_markdown_stream() now support arbitrary Shiny UI elements inside messages. allows gathering input user (e.g., selectInput()), displaying rich output (e.g., htmlwidgets like plotly), . (#29) Added new chat_clear() function clear chat messages. (#25) Added chat_app(), chat_mod_ui() chat_mod_server(). chat_app() takes ellmer chat client launches simple Shiny app interface chat. chat_mod_ui() chat_mod_server() replicate interface Shiny module, easily adding simple chat interface connected specific ellmer chat client. (#36) promise returned chat_append() now resolves content streamed chat. (#49)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"bug-fixes-0-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"shinychat 0.2.0","text":"chat_append(), chat_append_message() chat_clear() now work Shiny modules without needing namespace id Chat component. (#37) chat_append() now logs throws silent error stream errors reason. prevents app crashing stream interrupted. can still use promises::catch() handle error app code desired. (#46)","code":""},{"path":"https://posit-dev.github.io/shinychat/r/news/index.html","id":"shinychat-011","dir":"Changelog","previous_headings":"","what":"shinychat 0.1.1","title":"shinychat 0.1.1","text":"CRAN release: 2024-12-18 Initial CRAN submission.","code":""}]
