% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/live_browser.R
\name{live_browser}
\alias{live_browser}
\title{Open a live chat application in the browser}
\usage{
live_browser(chat, ...)
}
\arguments{
\item{chat}{A chat object created by \code{\link[=chat_openai]{chat_openai()}} or friends.}

\item{...}{
  Arguments passed on to \code{\link[shiny:shinyApp]{shiny::shinyApp}}
  \describe{
    \item{\code{onStart}}{A function that will be called before the app is actually run.
This is only needed for \code{shinyAppObj}, since in the \code{shinyAppDir}
case, a \code{global.R} file can be used for this purpose.}
    \item{\code{options}}{Named options that should be passed to the \code{runApp} call
(these can be any of the following: "port", "launch.browser", "host", "quiet",
"display.mode" and "test.mode"). You can also specify \code{width} and
\code{height} parameters which provide a hint to the embedding environment
about the ideal height/width for the app.}
    \item{\code{uiPattern}}{A regular expression that will be applied to each \code{GET}
request to determine whether the \code{ui} should be used to handle the
request. Note that the entire request path must match the regular
expression in order for the match to be considered successful.}
    \item{\code{enableBookmarking}}{Can be one of \code{"url"}, \code{"server"}, or
\code{"disable"}. The default value, \code{NULL}, will respect the setting from
any previous calls to  \code{\link[shiny:enableBookmarking]{enableBookmarking()}}. See \code{\link[shiny:enableBookmarking]{enableBookmarking()}}
for more information on bookmarking your app.}
  }}
}
\value{
(Invisibly) The input \code{chat}.
}
\description{
Note that these functions will mutate the input \code{chat} object as
you chat because your turns will be appended to the history.
}
\examples{
\dontrun{
chat <- ellmer::chat_claude()
live_browser(chat)
}

}
